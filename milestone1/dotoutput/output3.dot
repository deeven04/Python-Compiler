digraph G {
	statements135 [label = "statements"]
	statements135 -> funcdef134;
	funcdef134 [label = "funcdef(merge_sort)"]
	funcdef134 -> parameter1;
	parameter1 [label = "parameter"]
	parameter1 -> tfpdef0;
	tfpdef0 [label = "tfpdef(arr)"]
	funcdef134 -> stmts133;
	stmts133 [label = "stmts"]
	stmts133 -> if132;
	if132 [label = "if"]
	if132 -> operand4;
	operand4 [label = "operand(>)"]
	operand4 -> int5;
	int5 [label = "int (1)"]
	operand4 -> NAME2;
	NAME2 [label = "atom (len)"]
	NAME2 -> NAME3;
	NAME3 [label = "atom (arr)"]
	if132 -> stmts13;
	stmts13 [label = "stmts"]
	stmts13 -> assign12;
	assign12 [label = "assign"]
	assign12 -> NAME6;
	NAME6 [label = "atom (mid)"]
	assign12 -> term11;
	term11 [label = "term"]
	term11 -> NAME7;
	NAME7 [label = "atom (len)"]
	NAME7 -> NAME8;
	NAME8 [label = "atom (arr)"]
	term11 -> operand10;
	operand10 [label = "operant(//)"]
	operand10 -> int9;
	int9 [label = "int (2)"]
	stmts13 -> assign15;
	assign15 [label = "assign"]
	assign15 -> NAME14;
	NAME14 [label = "atom (L)"]
	stmts13 -> for24;
	for24 [label = "for"]
	for24 -> in_range25;
	in_range25 [label = "in_range"]
	in_range25 -> NAME16;
	NAME16 [label = "atom (i)"]
	in_range25 -> NAME17;
	NAME17 [label = "atom (mid)"]
	for24 -> stmts23;
	stmts23 [label = "stmts"]
	stmts23 -> assign22;
	assign22 [label = "assign"]
	assign22 -> NAME18;
	NAME18 [label = "atom (L)"]
	NAME18 -> NAME19;
	NAME19 [label = "atom (i)"]
	assign22 -> NAME20;
	NAME20 [label = "atom (arr)"]
	NAME20 -> NAME21;
	NAME21 [label = "atom (i)"]
	stmts13 -> assign27;
	assign27 [label = "assign"]
	assign27 -> NAME26;
	NAME26 [label = "atom (R)"]
	stmts13 -> for42;
	for42 [label = "for"]
	for42 -> in_range43;
	in_range43 [label = "in_range"]
	in_range43 -> NAME28;
	NAME28 [label = "atom (i)"]
	in_range43 -> testlist32;
	testlist32 [label = "test list"]
	testlist32 -> NAME29;
	NAME29 [label = "atom (mid)"]
	testlist32 -> NAME30;
	NAME30 [label = "atom (len)"]
	NAME30 -> NAME31;
	NAME31 [label = "atom (arr)"]
	for42 -> stmts41;
	stmts41 [label = "stmts"]
	stmts41 -> assign40;
	assign40 [label = "assign"]
	assign40 -> NAME33;
	NAME33 [label = "atom (R)"]
	NAME33 -> arithm_expr37;
	arithm_expr37 [label = "expr"]
	arithm_expr37 -> NAME34;
	NAME34 [label = "atom (i)"]
	arithm_expr37 -> operand35;
	operand35 [label = "operand(-)"]
	operand35 -> NAME36;
	NAME36 [label = "atom (mid)"]
	assign40 -> NAME38;
	NAME38 [label = "atom (arr)"]
	NAME38 -> NAME39;
	NAME39 [label = "atom (i)"]
	stmts13 -> funccall46;
	funccall46 [label = "funccall(merge_sort)"]
	funccall46 -> parameter45;
	parameter45 [label = "parameter"]
	parameter45 -> tfpdef44;
	tfpdef44 [label = "tfpdef(L)"]
	stmts13 -> funccall49;
	funccall49 [label = "funccall(merge_sort)"]
	funccall49 -> parameter48;
	parameter48 [label = "parameter"]
	parameter48 -> tfpdef47;
	tfpdef47 [label = "tfpdef(R)"]
	stmts13 -> assign52;
	assign52 [label = "assign"]
	assign52 -> NAME50;
	NAME50 [label = "atom (i)"]
	assign52 -> int51;
	int51 [label = "int (0)"]
	stmts13 -> assign55;
	assign55 [label = "assign"]
	assign55 -> NAME53;
	NAME53 [label = "atom (j)"]
	assign55 -> int54;
	int54 [label = "int (0)"]
	stmts13 -> assign58;
	assign58 [label = "assign"]
	assign58 -> NAME56;
	NAME56 [label = "atom (k)"]
	assign58 -> int57;
	int57 [label = "int (0)"]
	stmts13 -> while97;
	while97 [label = "while"]
	while97 -> and67;
	and67 [label = "and"]
	and67 -> operand60;
	operand60 [label = "operand(<)"]
	operand60 -> NAME61;
	NAME61 [label = "atom (len)"]
	NAME61 -> NAME62;
	NAME62 [label = "atom (L)"]
	operand60 -> NAME59;
	NAME59 [label = "atom (i)"]
	and67 -> operand64;
	operand64 [label = "operand(<)"]
	operand64 -> NAME65;
	NAME65 [label = "atom (len)"]
	NAME65 -> NAME66;
	NAME66 [label = "atom (R)"]
	operand64 -> NAME63;
	NAME63 [label = "atom (j)"]
	while97 -> stmts93;
	stmts93 [label = "stmts"]
	stmts93 -> if92;
	if92 [label = "if"]
	if92 -> operand70;
	operand70 [label = "operand(<)"]
	operand70 -> NAME71;
	NAME71 [label = "atom (R)"]
	NAME71 -> NAME72;
	NAME72 [label = "atom (j)"]
	operand70 -> NAME68;
	NAME68 [label = "atom (L)"]
	NAME68 -> NAME69;
	NAME69 [label = "atom (i)"]
	if92 -> stmts78;
	stmts78 [label = "stmts"]
	stmts78 -> assign77;
	assign77 [label = "assign"]
	assign77 -> NAME73;
	NAME73 [label = "atom (arr)"]
	NAME73 -> NAME74;
	NAME74 [label = "atom (k)"]
	assign77 -> NAME75;
	NAME75 [label = "atom (L)"]
	NAME75 -> NAME76;
	NAME76 [label = "atom (i)"]
	stmts78 -> expr_stmt81;
	expr_stmt81 [label = "assign_op(+= 1
)"]
	expr_stmt81 -> NAME79;
	NAME79 [label = "atom (i)"]
	expr_stmt81 -> int80;
	int80 [label = "int (1)"]
	if92 -> else91;
	else91 [label = "else"]
	else91 -> stmts87;
	stmts87 [label = "stmts"]
	stmts87 -> assign86;
	assign86 [label = "assign"]
	assign86 -> NAME82;
	NAME82 [label = "atom (arr)"]
	NAME82 -> NAME83;
	NAME83 [label = "atom (k)"]
	assign86 -> NAME84;
	NAME84 [label = "atom (R)"]
	NAME84 -> NAME85;
	NAME85 [label = "atom (j)"]
	stmts87 -> expr_stmt90;
	expr_stmt90 [label = "assign_op(+= 1
)"]
	expr_stmt90 -> NAME88;
	NAME88 [label = "atom (j)"]
	expr_stmt90 -> int89;
	int89 [label = "int (1)"]
	stmts93 -> expr_stmt96;
	expr_stmt96 [label = "assign_op(+= 1
)"]
	expr_stmt96 -> NAME94;
	NAME94 [label = "atom (k)"]
	expr_stmt96 -> int95;
	int95 [label = "int (1)"]
	stmts13 -> while114;
	while114 [label = "while"]
	while114 -> operand99;
	operand99 [label = "operand(<)"]
	operand99 -> NAME100;
	NAME100 [label = "atom (len)"]
	NAME100 -> NAME101;
	NAME101 [label = "atom (L)"]
	operand99 -> NAME98;
	NAME98 [label = "atom (i)"]
	while114 -> stmts107;
	stmts107 [label = "stmts"]
	stmts107 -> assign106;
	assign106 [label = "assign"]
	assign106 -> NAME102;
	NAME102 [label = "atom (arr)"]
	NAME102 -> NAME103;
	NAME103 [label = "atom (k)"]
	assign106 -> NAME104;
	NAME104 [label = "atom (L)"]
	NAME104 -> NAME105;
	NAME105 [label = "atom (i)"]
	stmts107 -> expr_stmt110;
	expr_stmt110 [label = "assign_op(+= 1
)"]
	expr_stmt110 -> NAME108;
	NAME108 [label = "atom (i)"]
	expr_stmt110 -> int109;
	int109 [label = "int (1)"]
	stmts107 -> expr_stmt113;
	expr_stmt113 [label = "assign_op(+= 1
)"]
	expr_stmt113 -> NAME111;
	NAME111 [label = "atom (k)"]
	expr_stmt113 -> int112;
	int112 [label = "int (1)"]
	stmts13 -> while131;
	while131 [label = "while"]
	while131 -> operand116;
	operand116 [label = "operand(<)"]
	operand116 -> NAME117;
	NAME117 [label = "atom (len)"]
	NAME117 -> NAME118;
	NAME118 [label = "atom (R)"]
	operand116 -> NAME115;
	NAME115 [label = "atom (j)"]
	while131 -> stmts124;
	stmts124 [label = "stmts"]
	stmts124 -> assign123;
	assign123 [label = "assign"]
	assign123 -> NAME119;
	NAME119 [label = "atom (arr)"]
	NAME119 -> NAME120;
	NAME120 [label = "atom (k)"]
	assign123 -> NAME121;
	NAME121 [label = "atom (R)"]
	NAME121 -> NAME122;
	NAME122 [label = "atom (j)"]
	stmts124 -> expr_stmt127;
	expr_stmt127 [label = "assign_op(+= 1
)"]
	expr_stmt127 -> NAME125;
	NAME125 [label = "atom (j)"]
	expr_stmt127 -> int126;
	int126 [label = "int (1)"]
	stmts124 -> expr_stmt130;
	expr_stmt130 [label = "assign_op(+= 1
)"]
	expr_stmt130 -> NAME128;
	NAME128 [label = "atom (k)"]
	expr_stmt130 -> int129;
	int129 [label = "int (1)"]
	statements135 -> funcdef157;
	funcdef157 [label = "funcdef(main)"]
	funcdef157 -> stmts145;
	stmts145 [label = "stmts"]
	stmts145 -> assign144;
	assign144 [label = "assign"]
	assign144 -> NAME136;
	NAME136 [label = "atom (arr)"]
	assign144 -> testlist_comp143;
	testlist_comp143 [label = "testlist"]
	testlist_comp143 -> int137;
	int137 [label = "int (12)"]
	testlist_comp143 -> int142;
	int142 [label = "int (7)"]
	int142 -> int141;
	int141 [label = "int (6)"]
	int142 -> int140;
	int140 [label = "int (5)"]
	int142 -> int139;
	int139 [label = "int (13)"]
	int142 -> int138;
	int138 [label = "int (11)"]
	stmts145 -> print147;
	print147 [label = "print"]
	print147 -> string146;
	string146 [label = "string ('Given array is')"]
	stmts145 -> print149;
	print149 [label = "print"]
	print149 -> NAME148;
	NAME148 [label = "atom (arr)"]
	stmts145 -> funccall152;
	funccall152 [label = "funccall(merge_sort)"]
	funccall152 -> parameter151;
	parameter151 [label = "parameter"]
	parameter151 -> tfpdef150;
	tfpdef150 [label = "tfpdef(arr)"]
	stmts145 -> print154;
	print154 [label = "print"]
	print154 -> string153;
	string153 [label = "string ('Sorted array is')"]
	stmts145 -> print156;
	print156 [label = "print"]
	print156 -> NAME155;
	NAME155 [label = "atom (arr)"]
	statements135 -> if163;
	if163 [label = "if"]
	if163 -> operand159;
	operand159 [label = "operand(==)"]
	operand159 -> string160;
	string160 [label = "string ('__main__')"]
	operand159 -> NAME158;
	NAME158 [label = "atom (__name__)"]
	if163 -> stmts162;
	stmts162 [label = "stmts"]
	stmts162 -> funccall161;
	funccall161 [label = "funccall(main)"]
}
